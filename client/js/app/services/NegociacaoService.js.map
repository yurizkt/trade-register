{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoDao","ConnectionFactory","NegociacaoService","_http","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService'\nimport {Negociacao} from '../models/Negociacao'\nimport {NegociacaoDao} from '../dao/NegociacaoDao'\nimport {ConnectionFactory} from './ConnectionFactory'\n\nexport class NegociacaoService{\n\n\t constructor() {\n        \n        this._http = new HttpService();\n    }\n\n\tobterNegociacoesDaSemana(){\n\n\t\treturn this._http\n\t\t\t.get('negociacoes/semana')\n\t\t\t.then(negociacoes => {\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n\t\t\t})\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro)\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana')\n\t\t\t})\n\t}\n\n\tobterNegociacoesDaSemanaAnterior(){\n\n\t\treturn this._http\n\t\t\t.get('negociacoes/anterior')\n\t\t\t.then(negociacoes => {\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n\t\t\t})\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro)\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana anterior')\n\t\t\t})\n\t}\n\n\tobterNegociacoesDaSemanaRetrasada(){\n\n\t\treturn this._http\n\t\t\t.get('negociacoes/retrasada')\n\t\t\t.then(negociacoes => {\n\t\t\t\treturn negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\n\t\t\t})\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro)\n\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana retrasada')\n\t\t\t})\n\t}\n\n\tobterNegociacoes(){\n\n\t\treturn Promise.all([\n\t\t\tthis.obterNegociacoesDaSemana(),\n\t\t\tthis.obterNegociacoesDaSemanaAnterior(),\n\t\t\tthis.obterNegociacoesDaSemanaRetrasada()\n\t\t]).then(periodos => {\n\n\t\t\tlet negociacoes = periodos\n\t\t\t\t.reduce((dados, periodo) => dados.concat(periodo), [])\n\t\t\t\t.map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor))\n\n\t\t\treturn negociacoes\n\t\t}).catch(erro => {\n\t\t\tthrow new Error(erro)\n\t\t})\n\t}\n\n\tcadastra(negociacao){\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => new NegociacaoDao(connection))\n\t\t\t.then(dao => dao.adiciona(negociacao))\n\t\t\t.then(() => 'Negociação adicionada com sucesso')\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro)\n\t\t\t\tthrow new Error('Não foi possível adicionar a negociação')\n\t\t\t})\t\t\t\t\n\t}\n\n\tlista(){\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => new NegociacaoDao(connection))\n\t\t\t.then(dao => dao.listaTodos())\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro)\n\t\t\t\tthrow new Error('Não foi possível obter as negociações')\t\n\t\t\t})\n\t}\n\n\tapaga(){\n\n\t\treturn ConnectionFactory\n\t\t\t.getConnection()\n\t\t\t.then(connection => new NegociacaoDao(connection))\n\t\t\t.then(dao => dao.apagaTodos())\n\t\t\t.then(() => 'Negociações apagadas com sucesso')\n\t\t\t.catch(erro => {\n\t\t\t\tconsole.log(erro)\n\t\t\t\tthrow new Error('Não foi possível apagar as negociações')\n\t\t\t})\n\t}\n\n\timporta(listaAtual) {\n\n       return this.obterNegociacoes()\n           .then(negociacoes =>\n               negociacoes.filter(negociacao =>\n                   !listaAtual.some(negociacaoExistente =>\n                       negociacao.isEquals(negociacaoExistente)))\n           )\n           .catch(erro => {\n               console.log(erro);\n               throw new Error(\"Não foi possível importar as negociações\");\n           });\n   }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}